#!/bin/sh
### BEGIN INIT INFO
# Provides:          gpsclock
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Should-Start:      $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Imprecise set of system clock from NMEA GPS
# Description:       Imprecise set of system clock from NMEA GPS
#   Uses programs in /opt/nidas/bin to read the GPS. This service
#   is useful on systems without a battery-powered hardware clock
#   to set the system clock to something close to accurate time
#   on power-up.
### END INIT INFO

# Author: Gordon Maclean <maclean@ucar.edu>

# Do NOT "set -e"

NIDAS_PATH=/opt/nidas/bin

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin:/opt/nidas/bin
DESC="gpsclock"
NAME=gpsclock
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed

# Read configuration variable file if it is present
[ -r /etc/default/tee-gps ] && . /etc/default/tee-gps

# No GPS_DEVICE defined
[ $GPS_DEVICE ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

do_start()
{
        # Return
        #   0 if daemon has been started
        #   1 if daemon was already running
        #   2 if daemon could not be started
        if ! which garmin > /dev/null || ! which gps_nmea_sysclock > /dev/null; then
            log_action_msg "garmin and gps_nmea_sysclock programs not found, should be in $NIDAS_PATH"
            return 2
        fi
        garmin -e GPRMC -e GPGGA -p 100 $GPS_DEVICE || return 2
        gps_nmea_sysclock $GPS_DEVICE || return 2
        return 0
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	;;
  status)
	;;
  #reload|force-reload)
	#
	# If do_reload() is not implemented then leave this commented out
	# and leave 'force-reload' as an alias for 'restart'.
	#
	#log_daemon_msg "Reloading $DESC" "$NAME"
	#do_reload
	#log_end_msg $?
	#;;
  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	log_daemon_msg "Restarting $DESC" "$NAME"
        do_start
        case "$?" in
                0) log_end_msg 0 ;;
                1) log_end_msg 1 ;; # Old process is still running
                *) log_end_msg 1 ;; # Failed to start
        esac
        ;;
  *)
	echo "Usage: $SCRIPTNAME {start|restart}" >&2
	exit 3
	;;
esac

:
