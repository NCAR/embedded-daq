#! /bin/sh

# Run this script like so:

# iptables-apply -t 30 -w /etc/network/isfs-ip6tables.rules -c
#     /etc/network/isfs-ip6tables-setup.sh

# This will roll back the ip6tables rules if they block the current
# connection.  The 30-second timeout provides time to attempt a second
# connection and make sure it succeeds before accepting the changes.

# Or, to immediately update the rules and the saved rules file, without the
# rollback check provided by iptables-apply:

# ./isfs-ip6tables-setup.sh > /etc/network/isfs-ip6tables.rules

# quit immediately on error, otherwise error messages tend to be missed
set -e

# Flush tables
# flush (delete all rules one by one) all chains in the -t filter table
ip6tables -F
# delete every non-builtin chain in the table
ip6tables -X
ip6tables -Z

# Default policies.  Do not try to filter output traffic, only what is
# allowed from outside.
ip6tables -P INPUT DROP
ip6tables -P OUTPUT ACCEPT
ip6tables -P FORWARD ACCEPT

# allow anything on loopback
ip6tables -A INPUT -i lo -j ACCEPT
ip6tables -A OUTPUT -o lo -j ACCEPT

info() {
cat <<EOF
# Generated by $0 on `date`
#
# Note running this script changes the firewall temporarily, until the next
# boot.  To make the changes permanent, run:
#
# $0 > /etc/network/isfs-ip6tables.rules
EOF
}

# Put the info messages at the beginning and end of output
info
ip6tables-save
info

