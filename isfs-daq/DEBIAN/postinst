#!/bin/sh
# postinst script for isfs-daq
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure|triggered)
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#


if [ "$1" = configure ]; then
    update-rc.d emerald defaults
    update-rc.d dsm defaults

    # Fix permissions on /tmp. Should be fixed in install image
    cf=/etc/fstab
    if ! grep ^tmpfs $cf | fgrep /tmp | fgrep -q mode=; then
        sed -i -r -e 's-^(tmpfs[[:space:]]+/tmp[[:space:]]+tmpfs[[:space:]]+[^[:space:]]+)-\1,mode=1777-' $cf
    fi

    # Add hostname, initially titan or viper, to avoid sudo errors
    hn=$(hostname)
    cf=/etc/hosts
    if ! grep -q "^[^#].*$hn" $cf; then
        sed -i -r -e "s/^(127.0.0.1.*)/\1 $hn/" $cf
    fi

    # temporary cleanup of some titan1 driver modules
    # to make some space
    cd /lib/modules/3.16.0-titan1/kernel/drivers
    rm -rf hid input leds videl tty
    cd /lib/modules
    depmod 3.16.0-titan1
    rm -f /boot/System.map-3.16.0-titan1
fi

cf=/etc/default/nidas-daq
if [ "$1" = configure -o "$1" = triggered ]; then

    # desired values for DAQ_* in config file
    user=daq
    group=eol
    gid=1342
    start_dsm=/home/$user/bin/start_dsm
    daq_path=/home/$user/bin:/opt/nidas/bin
    if ! [ -f $cf ]; then
        echo "/etc/default/nidas-daq does not exist, is nidas-daq installed?"
        exit 1
    fi
    . $cf
    # if DAQ_GROUP is not $group (or is unset)
    if [ "$DAQ_GROUP" != $group ]; then
        if fgrep -q DAQ_GROUP= $cf; then
            sed -r -i -e "s/^.*DAQ_GROUP=.*/DAQ_GROUP=$group/g" $cf
        else
            echo "DAQ_GROUP=$group" >> $cf
        fi
    fi
    if [ "$DAQ_GID" != $gid ]; then
        if fgrep -q DAQ_GID= $cf; then
            sed -r -i -e "s/^.*DAQ_GID=.*/DAQ_GID=$gid/g" $cf
        else
            echo "DAQ_GID=$gid" >> $cf
        fi
    fi
    if [ "$DAQ_USER" != $user ]; then
        if fgrep -q DAQ_USER= $cf; then
            sed -r -i -e "s/^.*DAQ_USER=.*/DAQ_USER=$user/g" $cf
        else
            echo "DAQ_USER=$user" >> $cf
        fi
    fi
    if [ -n "$DAQ_UID" ]; then
        sed -i -r -e "s/^ *DAQ_UID=/# DAQ_UID=/g" $cf
    fi
    if [ "$START_DSM" != $start_dsm ]; then
        if fgrep -q START_DSM= $cf; then
            sed -r -i -e "s,^.*START_DSM=.*,START_DSM=$start_dsm,g" $cf
        else
            echo "START_DSM=$start_dsm" >> $cf
        fi
    fi
    if [ "$DAQ_PATH" != $daq_path ]; then
        if fgrep -q DAQ_PATH= $cf; then
            sed -r -i -e "s,^.*DAQ_PATH=.*,DAQ_PATH=$daq_path,g" $cf
        else
            echo "DAQ_PATH=$daq_path" >> $cf
        fi
    fi

    . $cf
    # check if DAQ_GROUP exists
    if [ ! $DAQ_USER ]; then
        echo "DAQ_USER not found in $cf"
        exit 1
    fi
    if [ ! $DAQ_GROUP ]; then
        echo "DAQ_GROUP not found in $cf"
        exit 1
    fi
    if ! grep -q "^${DAQ_GROUP}:" /etc/group; then
        gidarg=
        [ $DAQ_GID ] && gidarg="--gid $DAQ_GID"
        addgroup $gidarg $DAQ_GROUP
    fi
    # check if DAQ_USER exists
    if ! id $DAQ_USER > /dev/null 2>&1; then
        # should create /home/daq
        uidarg=
        [ $DAQ_UID ] && uidarg="--uid $DAQ_UID"

        # Package has already installed some stuff to /home/daq
        # Save it, then restore. rsync also copies hidden files
        # Perhaps should just copy files owned by root, since those
        # came from the package install
        tmpdir=$(mktemp -d /tmp/${0##*/}_XXXXXX)
        trap "{ rm -rf $tmpdir; }" EXIT
        if [ -d /home/$DAQ_USER ]; then
            rsync -a /home/$DAQ_USER/ $tmpdir
            rm -rf /home/$DAQ_USER
        fi
        adduser $uidarg --ingroup $DAQ_GROUP --gecos "ISFS data acq account,,," --disabled-login $DAQ_USER
        # add to sudo group
        adduser $DAQ_USER sudo
        rsync -a $tmpdir/ /home/$DAQ_USER
        chown -R $DAQ_USER /home/$DAQ_USER
        chgrp -R $DAQ_GROUP /home/$DAQ_USER
        echo "$DAQ_USER user added, but root must do \"passwd $DAQ_USER\" for it to be activated"
    fi

    # Update perms on authorized_keys
    cf=/home/$DAQ_USER/.ssh/authorized_keys
    if [ -f $cf ]; then
        chown $DAQ_USER $cf
        chmod 600 $cf
    fi
fi

exit 0
