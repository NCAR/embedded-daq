#!/bin/sh

# When showing all sensors or processed sample streams (-a), rather than
# just the ones which are reporting, then when running on a DSM host, limit
# the samples to just this host.
#
# Also default the stats period to 10 seconds, but allow passing -P 0 to
# reset it.
#
# Show processed samples, but since there is no data_stats option which
# turns that off, the only way to show just raw samples from data_stats is
# to run the 'ds' script or 'data_stats' directly.

# This is just a kludge until we can add this kind of functionality to the
# data_stats program itself.  Or even better allow DSM names to be added to
# the sample criteria rather than just IDs, eg, "-i s8".

lookup_dsmid() # dsmname
{
    dsmname="$1"
    if [ -z "$dsmname" ]; then
	dsmname=`hostname -s`
    fi
    dsmid=-1
    case "$dsmname" in
	nw1b) dsmid=11 ;;
	nw1t) dsmid=12 ;;
	nw2) dsmid=20 ;;
	nw3) dsmid=30 ;;
	nw4b) dsmid=41 ;;
	nw4t) dsmid=42 ;;
	ne1b) dsmid=51 ;;
	ne1t) dsmid=52 ;;
	ne2b) dsmid=61 ;;
	ne2t) dsmid=62 ;;
	ne3b) dsmid=71 ;;
	ne3t) dsmid=72 ;;
	ne4b) dsmid=81 ;;
	ne4t) dsmid=82 ;;
	sw1b) dsmid=91 ;;
	sw1t) dsmid=92 ;;
	sw2) dsmid=100 ;;
	sw3b) dsmid=111 ;;
	sw3t) dsmid=112 ;;
	sw4b) dsmid=121 ;;
	sw4t) dsmid=122 ;;
	se2b) dsmid=131 ;;
	se2t) dsmid=132 ;;
	se3b) dsmid=141 ;;
	se3t) dsmid=142 ;;
	se4) dsmid=150 ;;
	se5) dsmid=160 ;;
	se6b) dsmid=171 ;;
	se6t) dsmid=172 ;;
    esac    
    echo $dsmid
}

parse_host() # socket
{
    # Parse the hostname from a nidas socket string.
    proto=`echo "$1" | cut -d: -f 1`
    if [ "$proto" == "sock" ]; then
	host=`echo "$1" | cut -d: -f 2`
	echo "$host"
    fi
}

# Default to showing only local samples when on a dsm.  This can be
# overridden by passing an explicit '-i -1,-1'.
filter=""
dsmid=`lookup_dsmid`
if [ $dsmid != "-1" ]; then
    filter="-i $dsmid,-1"
fi
for arg in $* ; do
    case "$arg" in
	-a)
	    if [ -z "$filter" -a "$dsmid" != "-1" ]; then
		filter="-i $dsmid,-1"
	    fi
	    ;;
	-i)
	    # If -i specified at all, then clear out the default.
	    filter=" "
	    ;;
	sock:*)
	    # If a socket name with dsmname in it, then
	    # add the filter for it.
	    host=`parse_host "$arg"`
	    dsmid=`lookup_dsmid "$host"`
	    if [ "$filter" != " " -a "$dsmid" != "-1" ]; then
		filter="-i $dsmid,-1"
	    fi
	    ;;
    esac
done
	
exec data_stats -a -p --period 10 $filter "$@"
