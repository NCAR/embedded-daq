#!/bin/bash

# if ISFF is not defined set it to the parent of the directory
# containing this script.
if [ -z $ISFF ]; then
    dir=`dirname $0`
    dir=`sh -c "cd $dir; pwd"`
    ISFF=`dirname $dir`
    export ISFF
fi

pf=$ISFF/current_project
if [ ! -f $pf ]; then
    echo "$pf not found. Cannot setup project environment."
    exit 1
fi
export PROJECT=$(<$pf)

pd=$ISFF/projects/$PROJECT/ISFF
if [ ! -d $pd ]; then
    pd=($ISFF/projects/$PROJECT/*)
    pd=${pd[0]}
fi

[ -d $pd ] && platform=${pd##*/}

pf=$pd/scripts/dsm/dsm_env.sh
if [ ! -f $pf ]; then
    echo "$pf not found. Cannot setup project environment."
    exit 1
fi
source $pf

# run pre_dsm script
pre=$ISFF/projects/$PROJECT/ISFF/scripts/dsm/pre_dsm.sh
[ -x $pre ] && $pre start 2>&1 | logger -p local5.warn > /dev/null 2>&1 &

# Check if user has passed an xml file. If not provide one
if ! echo $@ | grep -q .xml; then
    if [ -n "$CONFIG_XML" ]; then
            dsm "$@" '$ISFF/projects/$PROJECT/'$platform'/config/'$CONFIG_XML
    elif [ -n "$CONFIG_SOCK" ]; then
            dsm "$@" $CONFIG_SOCK
    else
            dsm "$@"
    fi
else
            dsm "$@"
fi

# run post_dsm script
post=$ISFF/projects/$PROJECT/ISFF/scripts/dsm/post_dsm.sh
[ -x $post ] && $post start 2>&1 | logger -p local5.warn > /dev/null 2>&1 &
