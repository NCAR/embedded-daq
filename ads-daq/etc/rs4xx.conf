#
# Syntax
#   ttydev options
#   ttydev: /dev/ttySx
#   options: any of the following
#       485/422/232 (default 232)
#       term, noterm (default noterm)
#       slew= norm,slow (default norm)
#       tx=auto, rts    (default rts)
# Example:
# /dev/ttyS2 485 slew=slow noterm tx=auto
#
# The key to half duplex 485 I/O is to only enable the TX driver
# when actually transmitting, so as not to affect the RX level, since
# they share the same conductors.  This is generally implemented
# as a connection between the TX hardware driver and RTS on the UART.
# Note that RTS in this case is typically not "put on the wire",
# it's just a local control of the TX hardware.
#
# Then the question is, who controls the RTS?  Some ports support
# an automatic control: which automatically toggles the RTS bit when data
# is in the transmit buffer.
# Use tx=auto to enable that mode if it is supported.
#
# If auto control of RTS is not present, then RTS must be
# controlled in software. Softare control is not
# optimal since the software doesn't know to a high precision when
# all characters have actually been transmitted, but generally works
# for low bandwidth connections. Use tx=rts to select software control
# 
# Modbus 485 device on Vortex /dev/ttyS2
/dev/ttyS2 485 slew=slow noterm tx=auto
