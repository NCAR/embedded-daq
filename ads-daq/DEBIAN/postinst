#!/bin/bash
# postinst script for ads-daq
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure|triggered )
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

if [ "$1" = configure ]; then
    update-rc.d -f emerald remove
    update-rc.d -f gpsd remove
    update-rc.d -f bluetooth remove
    update-rc.d pcmcom8 defaults
    update-rc.d dsm defaults

    # Disable bluetooth
    cf=/etc/default/bluetooth
    if [ -f $cf ]; then
        . $cf
        if [ $BLUETOOTH_ENABLED ]; then
            if [ $BLUETOOTH_ENABLED -gt 0 ]; then
                echo "Disabling bluetooth in $cf"
                sed -i -r -e 's/BLUETOOTH_ENABLED=.*/BLUETOOTH_ENABLED=0/' $cf
            fi
        fi
    fi

    # crude hack: if ads.conf in /etc/rsyslog.d is new, restart rsyslog
    if [ $(find /etc/rsyslog.d -name ads.conf -ctime -1 | wc -w ) -gt 0 ]; then
        /etc/init.d/rsyslog restart
    fi
    # create crontab for root
    if ! crontab -l > /dev/null; then
        cat << EOD | crontab
PATH=/usr/sbin:/usr/bin:/sbin:/bin
# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
EOD
    fi

    # module files
    modf=/etc/ads-modules.d/$(hostname).conf
    if ! [ -f $modf ]; then
        # try lower case
        modf=/etc/ads-modules.d/$(hostname | tr 'A-Z' 'a-z').conf
    fi
    if ! [ -f $modf ]; then
        if grep -Fq VIPER /proc/cpuinfo; then
            modf=/etc/ads-modules.d/viper.conf
        elif grep -Fq TITAN /proc/cpuinfo; then
            modf=/etc/ads-modules.d/titan.conf
        fi
    fi
    if [ -f $modf ]; then
        dest=/etc/modules-load.d
        [ -d $dest ] || mkdir $dest
        dmodf=$dest/ads.conf
        if [ -f $dmodf ]; then
            if ! diff -q $dmodf $modf; then
                echo "Differences:"
                # Don't do a diff without an || here. Otherwise
                # the non-zero return will cause a script exit
                diff $dmodf $modf || echo "Warning, overwriting $dmodf with $modf"
                cp $modf $dmodf
            fi
        else
            cp $modf $dmodf
        fi
    fi
fi

cf=/etc/default/nidas-daq

if [ "$1" = configure -o "$1" = triggered ]; then

    if ! [ -f $cf ]; then
        echo "/etc/default/nidas-daq does not exist, is nidas-daq installed?"
        exit 1
    fi

    # desired values for DAQ_* in config file
    user=ads
    group=eol
    gid=1342
    start_dsm=/home/$user/bin/start_dsm
    daq_path=/home/$user/bin:/opt/nidas/bin

    . $cf
    # if DAQ_GROUP is not $group (or is unset)
    if [ "$DAQ_GROUP" != $group ]; then
        if fgrep -q DAQ_GROUP= $cf; then
            sed -r -i -e "s/^.*DAQ_GROUP=.*/DAQ_GROUP=$group/g" $cf
        else
            echo "DAQ_GROUP=$group" >> $cf
        fi
    fi
    if [ "$DAQ_GID" != $gid ]; then
        if fgrep -q DAQ_GID= $cf; then
            sed -r -i -e "s/^.*DAQ_GID=.*/DAQ_GID=$gid/g" $cf
        else
            echo "DAQ_GID=$gid" >> $cf
        fi
    fi
    if [ "$DAQ_USER" != $user ]; then
        if fgrep -q DAQ_USER= $cf; then
            sed -r -i -e "s/^.*DAQ_USER=.*/DAQ_USER=$user/g" $cf
        else
            echo "DAQ_USER=$user" >> $cf
        fi
    fi
    if [ -n "$DAQ_UID" ]; then
        sed -i -r -e "s/^ *DAQ_UID=/# DAQ_UID=/g" $cf
    fi
    if [ "$START_DSM" != $start_dsm ]; then
        if fgrep -q START_DSM= $cf; then
            sed -r -i -e "s,^.*START_DSM=.*,START_DSM=$start_dsm,g" $cf
        else
            echo "START_DSM=$start_dsm" >> $cf
        fi
    fi
    if [ "$DAQ_PATH" != $daq_path ]; then
        if fgrep -q DAQ_PATH= $cf; then
            sed -r -i -e "s,^.*DAQ_PATH=.*,DAQ_PATH=$daq_path,g" $cf
        else
            echo "DAQ_PATH=$daq_path" >> $cf
        fi
    fi

    . $cf
    # check if DAQ,USER, DAQ_GROUP exists
    if [ ! $DAQ_USER ]; then
        echo "DAQ_USER not found in $cf"
        exit 1
    fi
    if [ ! $DAQ_GROUP ]; then
        echo "DAQ_GROUP not found in $cf"
        exit 1
    fi
    if ! grep -q "^${DAQ_GROUP}:" /etc/group; then
        gidarg=
        [ $DAQ_GID ] && gidarg="--gid $DAQ_GID"
        addgroup $gidarg $DAQ_GROUP
    fi
    # check if DAQ_USER exists
    if ! id $DAQ_USER > /dev/null 2>&1; then
        # should create /home/ads
        uidarg=
        [ $DAQ_UID ] && uidarg="--uid $DAQ_UID"

        # Package has already installed some stuff to /home/$DAQ_USER
        # Save it, then restore. rsync also copies hidden files
        # Perhaps should just copy files owned by root, since those
        # came from the package install
        tmpdir=$(mktemp -d /tmp/${0##*/}_XXXXXX)
        trap "{ rm -rf $tmpdir; }" EXIT
        if [ -d /home/$DAQ_USER ]; then
            rsync -a /home/$DAQ_USER/ $tmpdir
            rm -rf /home/$DAQ_USER
        fi
        adduser $uidarg --ingroup $DAQ_GROUP --gecos "ADS data acq account,,," --disabled-login $DAQ_USER
        # add to sudo group
        adduser $DAQ_USER sudo
        rsync -a $tmpdir/ /home/$DAQ_USER
        chown -R $DAQ_USER /home/$DAQ_USER
        chgrp -R $DAQ_GROUP /home/$DAQ_USER
        echo "$DAQ_USER user added, but root must do \"passwd $DAQ_USER\" for it to be activated"
    fi

    # Update perms on .ssh and authorized_keys
    cf=/home/$DAQ_USER/.ssh
    [ $(stat --format %U $cf) == "$DAQ_USER" ] || chown $DAQ_USER $cf
    [ $(stat --format %a $cf) == 700 ] || chmod 700 $cf

    cf=/home/$DAQ_USER/.ssh/authorized_keys
    [ $(stat --format %U $cf) == "$DAQ_USER" ] || chown $DAQ_USER $cf
    [ $(stat --format %a $cf) == 600 ] || chmod 600 $cf


    # Update DAQ_USER's .profile
    cf=/home/$DAQ_USER/.profile
    if ! grep -F -q "export ADS" $cf; then
        cat << \EOD >> $cf
    export ADS=$HOME/ads
EOD
    fi

    if ! grep -F -q "ads.profile" $cf; then
        cat << \EOD >> $cf
    [ -f $ADS/bin/ads.profile ] && source $ADS/bin/ads.profile
EOD
    fi

    # Set owner, perms of /var/log/ads
    dir=/var/log/ads
    [ -d $dir ] || mkdir -p $dir
    [ $(stat --format %a $dir) == 777 ] || chmod 0777 $dir
    [ $(stat --format %U $dir) == "$DAQ_USER" ] || chown -R $DAQ_USER $dir
    [ $(stat --format %G $dir) == "$DAQ_GROUP" ] || chgrp -R $DAQ_GROUP $dir

    cf=$dir/dsm.log
    [ -f $dir ] || touch $cf
    [ $(stat --format %U $cf) == "$DAQ_USER" ] || chown $DAQ_USER $cf
    [ $(stat --format %G $cf) == "$DAQ_GROUP" ] || chgrp $DAQ_GROUP $cf
    [ $(stat --format %a $cf) == 664 ] || chmod 0664 $cf

    # this package has a trigger on /etc/chrony/chrony.conf
    cf=/etc/chrony/chrony.conf

    # grab md5sum to see if we change chrony.conf
    tmpfile=$(mktemp)
    trap "{ rm -f $tmpfile; }" EXIT
    md5sum $cf > $tmpfile

    # comment all debian.pool servers
    sed -r -i -e 's/^(server.*debian\.pool\.*)/# \1/g' $cf
    # change tardis.ntp.ucar.edu to timeserver.raf.ucar.edu.
    sed -r -i -e 's/tardis.ntp.ucar.edu/timeserver.raf.ucar.edu/g' $cf
    # remove debian.pool from initstepslew 
    sed -r -i -e 's/^(initstepslew.*)[0-9]\.debian\.pool\.ntp\.org (.*)/\1 \2/' $cf

    cf=/etc/default/gpsd
    sed -r -i -e 's/^START_DAEMON=.*true.*/START_DAEMON="false"/' $cf
    sed -r -i -e 's/^USBAUTO=.*true.*/USBAUTO="false"/' $cf

    if ! md5sum -c --status $tmpfile; then
        /etc/init.d/chrony restart
    fi
fi

exit 0
