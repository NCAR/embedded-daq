#!/bin/sh
# postinst script for eol-daq
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure|triggered)
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

if [ "$1" = configure ]; then

    # backspace key in .profile
    # original package set stty erase ^H. Comment it
    for cf in /root/.profile ~daq/.profile; do
        if [ -f $cf ]; then
            if fgrep stty $cf | fgrep -q erase; then
                sed -r -i -e '
/^[[:space:]]*stty erase/{
s/^([[:space:]]*)(stty erase)/\1# \2/
a \
    :
}
' $cf
            fi
            # Set EDITOR. To vi of course! Aliases are provided in
            # .bash_aliases for the less enlightened to use other editors
            if ! grep -Fq EDITOR $cf; then
                echo "export EDITOR=vi" >> $cf
            fi
        fi
    done

    # Hack: set suid bit on /usr/sbin/i2cset, i2cget, pxaregs
    for p in /usr/sbin/i2cset /usr/sbin/i2cget /usr/bin/pxaregs; do
        [ -x $p ] && chmod u+s $p
    done

    # enlarge /tmp to 16 Mbytes
    cf=/etc/fstab
    size=$(sed -rn '/tmpfs/s/.*size=([0-9]+).*/\1/p' $cf)
    if [ -n "$size" -a "$size" -lt 16 ]; then
        sed -r -i -e '/tmpfs/s/(.*size=)([0-9]+)(.*)/\116\3/' $cf
    fi
    # early images didn't have mode=1777 on /tmp
    if ! grep -F /tmp $cf | grep -Fq mode=1777; then
        sed -r -i -e '/tmpfs/s/^(.*)(size=.*)/\1mode=1777,\2/' $cf
    fi

    # allow read access on some log files
    chmod +r /var/log/kern.log
    chmod +r /var/log/daemon.log

    # add eth0 to ifplugd INTERFACES, so that it
    # is brought up after a re-connect.
    cf=/etc/default/ifplugd
    if [ -f $cf ]; then
        unset INTERFACES
        . $cf
        if ! [ $INTERFACES ]; then
            if grep -q "^INTERFACES" $cf; then
                sed -i -r -e 's/^INTERFACES=.*/INTERFACES="eth0"/' $cf
            else
                echo 'INTERFACES="eth0"' >> $cf
            fi
        fi
    fi

    # remove some AEL leftovers. Once the images are cleaned up
    # and all data systems upgraded, this could be removed
    rm -rf /sbin/ael /bin/ael /usr/bin/ael /usr/sbin/ael /usr/lib/old

    [ -d /var/lib/logrotate ] || mkdir -p /var/lib/logrotate

fi

if [ "$1" = configure -o "$1" = triggered ]; then
    # Uncomment adding /opt/nidas/bin to PATH
    cf=/etc/profile.d/nidas.sh
    if [ -f $cf ]; then
        sed -r -i -e 's,# *(PATH=.*/opt/nidas/bin.*),\1,' $cf
    fi

    cf=/etc/rsyslog.conf
    rssyslog=false
    # suppress local5 messages in /var/log/message, by adding
    # local5.none to rsyslog.conf entry
    if ! grep -v "^#" $cf | grep -F /var/log/messages | grep -qF local5.none; then
        rssyslog=true
        sed -r -i -e '
/^[[:space:]].*\/var\/log\/messages/s,^([[:space:]]+[^[:space:]]+)([[:space:]]+-/var/log/messages),\1;local5.none\2,
' $cf
    fi

    # check for a section in rsyslog.conf that sends
    # messages to /etc/xconsole
    if grep -v "^#" $cf | grep -Fq /dev/xconsole; then
        rssyslog=true
        # It's a multi-line section, which complicates the sed script,
        # but hey, we like obtuse sed scripts.
        sed -n -r -i -e '
t xconsole          # if a substitution since last line read, go to xconsole
/^[[:space:]]/{     # line has leading space, its a continuation of a rule
    H               # append to hold space
    b last
}
                    # not a continuation line
    x               # exchange hold and pattern spaces
    1d              # for first line, hold is empty
                    # check hold for xconsole line
    \,.*\|[[:space:]]*/dev/xconsole,b xconsole
    p               # print pattern space without xconsole
    b last
:xconsole
    s/^.+$/# &/     # Add leading comment char
    P               # print up to newline in pattern space
    D               # delete up to newline, start over without reading
                    # first t check will be true
:last               # check for last line in file
$!b                 # not
    x               # last line, exchange hold and pattern spaces, print, quit
    \,.*\|[[:space:]]*/dev/xconsole,b xconsole
    p
    q
        ' $cf
    fi

    # restart rsyslog if we've changed anything
    $rssyslog && /etc/init.d/rsyslog restart
fi

exit 0
